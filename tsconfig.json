{
	"compilerOptions": {
		/* Basic Options */
		"target": "ESNEXT" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */,
		"module": "CommonJS" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
		"lib": [
			"ES2016",
			"ES2019",
			"ES2017",
			"ES2018",
			"DOM",
			"DOM.Iterable",
		] /* Specify library files to be included in the compilation. */,
		"checkJs": true /* Report errors in .js files. */,
		"allowJs": true,
		"skipLibCheck": true,
		"declaration": true, /* Generates corresponding '.d.ts' file. */
		"declarationMap": true, /* Generates a sourcemap for each corresponding '.d.ts' file. */
		"sourceMap": true, /* Generates corresponding '.map' file. */
		// "outFile": "./",                       /* Concatenate and emit output to single file. */
		// "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
		// "composite": true,                     /* Enable project compilation */
		"incremental": true, /* Enable incremental compilation */
		// "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */
		"removeComments": false, /* Do not emit comments to output. */
		"noEmit": true /* Do not emit outputs. (BECAUSE WE'RE USING TS-NODE!) */,
		"importHelpers": false, /* Import emit helpers from 'tslib'. */
		// "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
		// "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
		/* Strict Type-Checking Options */
		"strict": false /* Enable all strict type-checking options. */,
		/* Additional Checks */
		"noUnusedLocals": false /* Report errors on unused locals. */,
		"noUnusedParameters": false /* Report errors on unused parameters. */,
		"noImplicitReturns": false /* Report error when not all code paths in function return a value. */,
		"noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
		"noImplicitAny": false,
		"strictPropertyInitialization": false,
		"forceConsistentCasingInFileNames": true,
		/* Module Resolution Options */
		"moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
		"baseUrl": "./" /* Base directory to resolve non-absolute module names. */,
		"paths": {
			"*": [
				"types/*"
			],
		} /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */,
		"allowSyntheticDefaultImports": true, /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
		// "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
		/* Source Map Options */
		// "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
		// "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
		// "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
		// "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
		/* Experimental Options */
		"experimentalDecorators": true /* Enables experimental support for ES7 decorators. */
	},
	"ts-node": {
		"esm": true,
	    "experimentalSpecifierResolution": "node",
	},
	"include": [
		"./src/**/*.ts",
		"./src/**/*.js",
		"./src/config/config.ts",
		"tsconfig.front.json"
	],
	"exclude": [
		"./src/assets/scripts",
	]
}